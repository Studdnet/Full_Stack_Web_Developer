* {
  margin: 0;
  padding: 0;
}

body {
  font-family: Arial, Helvetica, sans-serif;
}

.wrapper {
  height: 100%;
  overflow: hidden;
  min-height: 100%;
  padding: 50px;
}

.block {
}

.block__row {
  height: 100vh;
  display: flex;
  /* display: inline-flex - строчный flex-контейнер
  очень удобно работать если нужно ограничить ширину контейнера по содержимому и выстроить по центру с помощью text-align: center, примененного к родительскому элементу*/
  /* display: inline-flex; */
  /* Свойство justify-content управляет положением содержимого flex-контейнера относительно главной оси flex-контейнера.
  Может принимать следующие значения:
  flex-start; - значение по умолчанию. Располагает содержимое вначале контейнера;
  flex-end; - располагает в конце;
  space-between; - свободное пространство равномерно распределяется между элементами, причем крайние элементы прижимаются к краям контейнера;
  space-around; - свободное пространство равномерно распределяется между элементами, причем крайние элементы смещены от краев на расстояние равное половине расстояние между элементами, находящимися внутри контейнера (если всего два элемента в контейнера, то тогда расстояние между элементами и краями контейнера равно половине расстояния между самими элементами)
  */
  /* flex-wrap - свойство, которая отвечает за возможность переноса flex-элементов на следующую строку и может принимать следующие значения:
  wrap - перенос разрешен;
  nowrap - перенос запрещен;
  wrap-reverse - перенос задом-наперед;
   */
  justify-content: flex-start;
  /* align-items - управляет содержимым контейнера относительно вспомогательной оси, которая повернута относительно главной оси на 90 градусов и может принимать следующие значения:
  align-items: stretch; - значение по умолчанию. Это свойство растягивает все элементы по высоте (ширине) наиболее высокого (широкого) элемента;
  align-items: flex-start;
  align-items: flex-end;
  align-items: center;*/
  flex-direction: column;
  /* flex-direction - свойство управляет направлением главной оси flex-контейнера. По умолчанию данное свойство принимает значение row. Также может принимать значения row-reverse, column, column-reverse. При значении column главная ось контейнера переворачивается на 90 градусов и становиться вертикальной. В таком случае свойство justify-content управляет положением по вертикальной оси, а align-items по горизонтальной.*/
  /* Свойство align-content для управления выравниванием и распределением флекс-контейнеров вдоль главной оси (обычно это вертикальная ось) в случае, если на флекс-контейнере есть несколько строки (flex lines). Это свойство применяется к контейнерам, которые используют свойство flex-wrap со значением wrap или wrap-reverse.
  Применение к множественным строкам: align-content работает, когда у флекс-контейнера есть несколько строк (flex lines) благодаря свойству flex-wrap. Если у вас есть только одна строка, align-content будет бесполезным, так как флекс-элементы всегда выравниваются вдоль главной оси.*/

  border: 20px solid #ece89d;
  margin: 0 0 20px 0;
}

.block__column {
  border: 20px solid #5e5373;
  /* flex-basis, flex-grow, flex-shrink - применяется только для flex-элементов;
  flex-basis - управляет базовым размером элемента. Значение по auto. Стоит учесть, что данное свойство не переписывает свойство width, а только указывает базовый размер flex-элемента. Ширина самого контейнера может быть и больше базового размера*/
  /* flex-basis: 300px; */
  /* flex-grow - контролирует возможность элемента увеличиваться относительно его базового размера. По умолчанию принимает значение 0. */
  /* flex-grow: 1; */
  /* flex-shrink - контролирует возможность элемента уменьшаться относительно его базового размера. По умолчанию принимает значение 1. */
  /* flex-shrink: 1; */
  /* Короткая запись значений свойств
  flex: flex-grow flex-shrink flex-basis*/
  /* flex: 1 1 50%; */
}

.block__column_1 {
  /* align-self - переписывает свойство align-items для отдельного элемента и может принимать такие эе значения как и align-items. 
	Свойство order - позволяет управлять очередностью элементов. По умолчанию у всех элементов свойство order равно 0. Чем меньше данное свойство у конкретного элемента, тем левее он в ряду.*/
}
.block__column_2 {
  flex: 1 1 auto;
}
.block__column_3 {
}

.block__item {
  background-color: #18b5a4;
  padding: 50px;
  color: white;
  font-size: 50px;
  font-weight: 700;
  text-align: center;
}

.block__list {
  display: flex;
  align-items: center;
}

.block__list li {
  list-style: none;
  margin-right: 20px;
}

.block__list li:last-child {
  margin-right: 0;
}

.block__info {
  position: relative;
  padding: 0 0px 0 20px;
}

.block__info_y:before,
.block__info_p:before,
.block__info_g:before {
  position: absolute;
  content: "";
  top: 0px;
  left: 0;
  width: 15px;
  height: 15px;
}

.block__info_y:before {
  background-color: #ece89d;
}

.block__info_p:before {
  background-color: #5e5373;
}

.block__info_g:before {
  background-color: #18b5a4;
}
